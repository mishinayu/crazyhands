---
# tasks file for zookeper
- name: Create zookeeper Group
  group:
    name: "{{ zookeeper_group }}"
    state: present
  tags: zoo

- name: Create zookeeper User
  user:
    name: "{{ zookeeper_user }}"
    comment: "zookeeper administrator"
    group: "{{ zookeeper_group }}"
    create_home: yes 
    shell: /bin/bash
  tags: zoo

- name: "Create SSH keys for the zookeeper user and put it into this role's files directory"
  shell: ssh-keygen -f "{{role_path}}/files/zookeeper_user_id_rsa" -t rsa -N ''
  args:
    creates: "{{ role_path }}/files/zookeeper_user_id_rsa"
  delegate_to: localhost
  run_once: true
  tags: zoo

- name: "Make sure SSH directory for zookeeper user exists"
  file:
    path: "{{ zookeeper_uhome }}/.ssh"
    state: directory
    mode: 0700
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  tags: zoo

- name: "Copy private SSH key for zookeeper user"
  copy:
    src: zookeeper_user_id_rsa
    dest: "{{ zookeeper_uhome }}/.ssh/id_rsa"
    mode: 0600
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  tags: zoo

- name: "Copy public SSH key for zookeeper user"
  copy:
    src: zookeeper_user_id_rsa.pub
    dest: "{{ zookeeper_uhome }}/.ssh/id_rsa.pub"
    mode: 0644
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  tags: zoo

- name: "Cross authorize this key among all zookeeper servers"
  lineinfile:
    path: "{{ zookeeper_uhome }}/.ssh/authorized_keys"
    create: yes
    mode: 0600
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    line: "{{ lookup('file', 'zookeeper_user_id_rsa.pub') }}"
    state: present
  tags: zoo

- name: "Zookeeper | Downloading Apache Zookeeper binaries"
  get_url:
    url: "http://archive.apache.org/dist/zookeeper/zookeeper-{{ zooversion }}/apache-zookeeper-{{ zooversion }}-bin.tar.gz"
    dest: /tmp/
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  tags: zoo

- name: "Zookeeper | Create /etc/zookeeper directory"
  file:
    path: /etc/zookeeper
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    state: directory
    mode: 0755
  tags: zoo

- name: "Zookeeper | Create /data/zookeper/data directory"
  file:
    path: "{{ zoodata }}"
    state: directory
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    mode: 0755
  tags: zoo

- name: "Zookeper | Unpacking Apache Zookeeper binaries archive"
  unarchive:
    src: /tmp/apache-zookeeper-{{ zooversion }}-bin.tar.gz  
    dest: /etc/zookeeper
    remote_src: yes
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  become: true
  become_user: "{{ zookeeper_user }}"
  tags: zoo

- name: "Zookeeper | Copy Apache Zookeeper zoo.cfg"
  template:
    src: "zoo.cfg.j2"
    dest: "{{ zoohome }}/conf/zoo.cfg"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  tags: zoo

- name: "Zookeeper | Copy default Zookeeper myid"
  copy:
    src: "{{ role_path }}/files/myid"
    dest: "{{ zoodata }}"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    mode: 0664
  tags: zoo

- name: "Zookeeper | Set myid"
  lineinfile:
    dest: "{{ zoodata }}/myid"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
    state: present
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
  with_items:
   - { regexp: '^1', line: "{{groups['zoo'].index(inventory_hostname)+1 }}" }
  tags: zoo

- name: "Zookeeper | Template Apache  Zookeeper systemd" 
  template:
    src: apache.zookeeper.service.j2
    dest: /etc/systemd/system/apache.zookeeper.service
  when: ansible_distribution == "RedHat" and ansible_distribution_major_version > '6'
  tags: zoo

- name: "Zookeeper | Enable and start the Apache Zookeeper service"
  systemd:
    name: apache.zookeeper
    state: restarted
    daemon_reload: yes
    enabled: yes
  tags: zoo
...

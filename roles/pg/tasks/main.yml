---
# tasks file for pg
- name: "PostgreSQL | Install pg repo package"
  yum:
    name: "https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
    state: present
  tags: pg

- name: "PostgreSQL | Ensure a list of pg packages installed"
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - postgresql11-server
    - postgresql11
    - postgis25_11
    state: present
  tags: pg

- name: "PostgreSQL | Make sure the pgdata directory exists"
  file:
    path: "{{ pgdata }}"
    owner: "{{ pguser }}"
    group: "{{ pggroup }}"
    state: directory
    mode: 0700
  register: pgdata_dir_exist
  when: pgdata != ""
  tags: pg

- name: "PostgreSQL | Check whether the postgres data directory is initialized | RedHat"
  stat:
    path: "{{ pgdata }}/PG_VERSION"
  when: ansible_os_family == "RedHat" and not pgcluster_reset
  register: pgdata_dir_initialized
  tags: pg

- name: "PostgreSQL | Initialize the database "
  command: "{{ pgbin }}/initdb -D {{ pgdata }}"
  become: yes
  become_user: "{{ pguser }}"
  when: ansible_os_family == "RedHat" and (pgcluster_reset or pgdata_dir_exist.changed or not pgdata_dir_initialized.stat.exists)
  tags: pg

- name: "PostgreSQL | Copy pg_hba.conf to the targets"
  template:
    src: pg_hba.conf.j2
    dest: "{{ pgdata }}/pg_hba.conf"
    owner: "{{ pguser }}"
    group: "{{ pggroup }}"
  become: true
  become_user: "{{ pguser }}"
  tags: pg

- name: "PostgreSQL | Change postgresql.conf"
  lineinfile:
    path: "{{ pgdata }}/postgresql.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
  - { regexp: '^#listen_addresses', line: "listen_addresses = '{{ ansible_default_ipv4.address }}'"}
  - { regexp: '^max_connections', line: "max_connections = 1000"}
  tags: pg

- name: "PostgreSQL | Change PGDATA in service postgresql-11"
  lineinfile:
    dest: "/usr/lib/systemd/system/postgresql-11.service"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
    state: present
  with_items:
   - { regexp: '^Environment=PGDATA=', line: 'Environment=PGDATA={{ pgdata }}' }
  tags: pg

- name: "PostgreSQL | Add nofile soft limit for the user postgres" 
  pam_limits:
    domain: "{{ pguser }}"
    limit_type: soft
    limit_item: nofile
    value: 4096
  tags: pg

- name: "PostgreSQL | Add nofile hard limit for the user postgres"
  pam_limits:
    domain: "{{ pguser }}"
    limit_type: hard
    limit_item: nofile
    value: 16384
  tags: pg

- name: "PostgreSQL | Add postgres user to sudoers"
  lineinfile:
    path: /etc/sudoers
    state: present
    line: '{{ pguser }} ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'
  tags: pg

- name: "PostgreSQL | Enable and start PG service"
  systemd:
    name: postgresql-11
    enabled: yes
    state: restarted
    daemon_reload: yes
  tags: pg

###Add hadoop-hive specific actions###

- name: "PostgreSQL | Create hiveuser"
  postgresql_user:
    db: postgres
    name: "{{ hive_database_user }}"
    password: "{{ hive_database_pass }}"
    encrypted: yes
  become: true
  become_user: "{{ pguser }}"
  tags: pg

- name: "PostgreSQL | Create metastore, hue databases"
  postgresql_db:
    name: "{{ item }}"
    owner: "{{ pguser }}"
  with_items:
  - metastore
  - metastore_hive
  - hue
  tags: pg   

...
